기본 원칙:
- 규칙 문서, 괄호안의 문서 우선 참조 (development_sequence.md)
  
  - 정의된 스펙만 구현
  - 불필요한 커뮤니케이션 최소화
  - 이슈 발생 시의 커뮤니케이션 가이드라인:
  - 이슈 발생 시, 원인 분석 및 해결 방법을 정확하게 기록한다.
  - 기록된 내용은 로그, 슬랙 채널 또는 내부 위키에 공유하여 팀원 전체가 확인할 수 있도록 한다.
  - 문제 해결 후, 해당 이슈의 처리 결과 및 학습 내용을 차후 참고 자료로 보관한다.
  - 주석을 자세히 작성하여 코드 이해도를 높인다.
  - 문제발생 시 로그를 자세히 작성하여 원인을 파악한다.
  - API 29 이하 버전 코드는 제거한다.
  - API 29 ~ 34 호환성 문제 발생 시, 해당 문제를 해결하는 코드를 작성한다.
  - API 29 ~ 34 호환성 중요도 높음


  ## 1. 개발 환경
  
 1인개발 환경
```kotlin
// 기본 환경
- Android Studio Hedgehog | 2023.1.1
- JDK 17
- Gradle 8.0
- Kotlin 1.9.0

// SDK 설정 (업데이트)
- minSdk: 29 (Android 10)
- targetSdk: 34 (Android 14)
- compileSdk: 34

// 핵심 라이브러리
- AndroidX Core: 1.12.0
- Navigation: 2.7.5
- Room: 2.6.1
- Hilt: 2.48
``` 

## 개발 진행 원칙
개발 순서:
1. 문서 규칙 확인
2. 구현
3. 테스트
4. 다음 작업 진행

## 코드 품질 기준
- 네이밍 컨벤션
  - 클래스: PascalCase (예: MarkerRepository)
  - 함수/변수: camelCase (예: getUserData)
  - 상수: UPPER_SNAKE_CASE (예: MAX_MEMO_COUNT)
  - 파일명: PascalCase (클래스명과 일치)
  - 레이아웃 리소스: snake_case (예: activity_main.xml)

- 구조 제한
  - 함수 길이: 최대 30줄
  - 클래스 길이: 최대 300줄
  - 중첩 depth: 최대 3단계
  - 파라미터 개수: 최대 4개
  - 패키지당 클래스 수: 최대 10개

- 복잡도 기준
  - 순환복잡도(CCN): 최대 10
  - 응집도: 높게 (단일 책임 원칙 준수)
  - 결합도: 낮게 (의존성 주입 활용)
  - 테스트 커버리지: 70% 이상
  - 중복 코드: 3줄 이상 중복 금지

## 앱 업데이트 정책
1. 강제 업데이트:
  조건:
    - 주요 보안 패치
    - API 호환성 변경
    - 크리티컬 버그 수정

2. 선택 업데이트:
  조건:
    - 기능 추가
    - 성능 개선
    - UI 개선

3. 업데이트 알림:
  - 팝업 공지
  - 스토어 이동 버튼
  - 다음에 하기 옵션

 